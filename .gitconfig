### added colors so when i call any diff, or even git add -p, for patching:


[color]
ui = auto
[color "branch"]
current = yellow reverse
local = yellow
remote = green
[color "diff"]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
[color "status"]
added = yellow
changed = green
untracked = cyan



### macbook pro

[alias]
    mt = mergetool
    cp = cherry-pick    
    cpa = cherry-pick --abort
    cpc = cherry-pick --continue
    br = branch -r
    b = branch
    ai = add --interactive
    s = status
    d = diff --word-diff=color
    dc = diff --word-diff=color --cached
    c = commit
    cm = commit -m
      cma = commit -a -m
    cc = commit -am 
    ca = commit -a
    cam = commit --amend
    caa = commit -a --amend -C HEAD
    a = add
    co = checkout
    b = for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k|head -n 1`\\t$k;done|sort -r
    l = log
    f = fetch
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    # Nice pretty tree, each commit on a line, 
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue%an%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    lga = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue%an%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    # History, using reflog
    h = reflog --date=local
    h2 = for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k|head -n 1`\\t$k;done|sort -r
    # Last recently committed to branches
    lb = for-each-ref --sort=-committerdate refs/heads/
    r = rebase
    rc = rebase --continue
    ra = rebase --abort
    rs = rebase --skip
    m = merge
    mc = merge --continue
    ma = merge --abort
    ms = merge --skip
[merge]
	tool = opendiff
